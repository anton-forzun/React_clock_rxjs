{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","sec","setSec","status","setStatus","useEffect","sub","Subject","interval","pipe","takeUntil","subscribe","val","next","complete","start","React","useCallback","stop","reset","wait","className","Date","toISOString","slice","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"2NAUe,SAASA,IACtB,MAAsBC,mBAAS,GAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA4BF,mBAAe,QAA3C,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACR,IAAMC,EAAM,IAAIC,IAQhB,OAPAC,YAAS,KACNC,KAAKC,YAAUJ,IACfK,WAAU,WACM,QAAXR,GACFD,GAAO,SAAAU,GAAG,OAAIA,EAAM,UAGnB,WACLN,EAAIO,KAAK,GACTP,EAAIQ,cAEL,CAACX,IAEJ,IAAMY,EAAQC,IAAMC,aAAY,WAC9Bb,EAAU,SACT,IAEGc,EAAOF,IAAMC,aAAY,WAC7Bb,EAAU,QACVF,EAAO,KACN,IAEGiB,EAAQH,IAAMC,aAAY,WAC9Bf,EAAO,KACN,IAEGkB,EAAOJ,IAAMC,aAAY,WAC7Bb,EAAU,UACT,IAEH,OACE,gCACE,sBAAMiB,UAAU,QAAhB,SACI,IAAIC,KAAKrB,GAAKsB,cAAcC,MAAM,GAAI,MAE1C,wBAAQC,KAAK,SAASJ,UAAU,eAAeK,QAASX,EAAxD,mBAGA,wBAAQU,KAAK,SAASJ,UAAU,cAAcK,QAASR,EAAvD,kBAGA,wBAAQO,KAAK,SAASJ,UAAU,SAASK,QAASP,EAAlD,mBACA,wBAAQM,KAAK,SAASJ,UAAU,SAASK,QAASN,EAAlD,qBCvDNO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.611d7698.chunk.js","sourcesContent":["import React from 'react';\n\nimport { useEffect, useState } from 'react';\nimport { interval, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport './App.scss';\n\ntype Prop = 'run' | 'stop' | 'wait';\n\nexport default function App() {\n  const [sec, setSec] = useState(0);\n  const [status, setStatus] = useState<Prop>('stop');\n\n  useEffect(() => {\n    const sub = new Subject();\n    interval(1000)\n      .pipe(takeUntil(sub))\n      .subscribe(() => {\n        if (status === 'run') {\n          setSec(val => val + 1000);\n        }\n      });\n    return () => {\n      sub.next(1);\n      sub.complete();\n    };\n  }, [status]);\n\n  const start = React.useCallback(() => {\n    setStatus('run');\n  }, []);\n \n  const stop = React.useCallback(() => {\n    setStatus('stop');\n    setSec(0);\n  }, []);\n \n  const reset = React.useCallback(() => {\n    setSec(0);\n  }, []);\n\n  const wait = React.useCallback(() => {\n    setStatus('wait');\n  }, []);\n\n  return (\n    <div>\n      <span className=\"clock\">\n         {new Date(sec).toISOString().slice(11, 19)}\n      </span>\n      <button type='button' className=\"start-button\" onClick={start}>\n        Start\n      </button>\n      <button type='button' className=\"stop-button\" onClick={stop}>\n        Stop\n      </button>\n      <button type='button' className=\"button\" onClick={reset}>Reset</button>\n      <button type='button' className=\"button\" onClick={wait}>Wait</button>\n    </div>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}